// p3-module.js

const validDenominations = [1, 5, 10, 25, 50, 100];

function validDenomination(coin) {
  return validDenominations.indexOf(coin) !== -1;
}

function valueFromCoinObject(obj) {
  const { denom = 0, count = 0 } = obj;
  if (!validDenomination(denom) || isNaN(count)) {
    throw new Error('Invalid coin object');
  }
  return denom * count;
}

function valueFromArray(arr) {
  return arr.reduce((total, coin) => {
    return total + valueFromCoinObject(coin);
  }, 0);
}

function coinCount(...coinage) {
  return valueFromArray(coinage);
}

module.exports = {
  validDenomination,
  valueFromCoinObject,
  valueFromArray,
  coinCount,
};

// test.js

const { coinCount } = require('./p3-module');

console.log('Value of {denom: 5, count: 3}:', coinCount({denom: 5, count: 3}));
console.log('Value of {denom: 5, count: 3}, {denom: 10, count: 2}:', coinCount({denom: 5, count: 3}, {denom: 10, count: 2}));
console.log('Value of [{denom: 25, count: 2}, {denom: 1, count: 7}]:', coinCount({denom: 25, count: 2}, {denom: 1, count: 7}));
console.log('Value of [[{denom: 25, count: 2}, {denom: 1, count: 7}]]:', coinCount([{denom: 25, count: 2}, {denom: 1, count: 7}]));

